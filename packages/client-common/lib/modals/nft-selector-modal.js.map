{"version":3,"file":"nft-selector-modal.js","sourceRoot":"","sources":["../../src/modals/nft-selector-modal.ts"],"names":[],"mappings":"AAAA,OAAO,aAAa,CAAC;AACrB,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AAGjC,MAAM,UAAU,sBAAsB,CACpC,OAAe,EACf,QAAgC,EAChC,SAAkD;IAElD,MAAM,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;IAC9B,MAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;IACxD,MAAM,IAAI,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC;IAC5B,MAAM,SAAS,GAAG,EAAE,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,qBAAqB,CAAC,CAAC;IAEtG,MAAM,OAAO,GAAG,EAAE,CAAC,yBAAyB,EAC1C,OAAO,EACP,SAAS,EACT,IAAI,CACL,CAAC;IAEF,MAAM,WAAW,GAAG,EAAE,CAAC,YAAY,EACjC,EAAE,CAAC,aAAa,EACd,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC,EAC7B,EAAE,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAC/B,EAAE,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC,CAC9D,CACF,CACF,CAAC;IAEF,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAEnC,SAAS,CAAC,OAAO,CAAC;SACf,IAAI,CAAC,IAAI,CAAC,EAAE;QACX,OAAO,CAAC,MAAM,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC,CAAC;YACnD,OAAO;QACT,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACjB,MAAM,GAAG,GAAG,EAAE,CAAC,KAAK,EAAE;gBACpB,GAAG,EAAE,GAAG,CAAC,KAAK;gBACd,GAAG,EAAE,GAAG,CAAC,IAAI;gBACb,KAAK,EAAE,uFAAuF;aAC/F,CAAC,CAAC;YAEH,MAAM,IAAI,GAAG,EAAE,CAAC,UAAU,EAAE;gBAC1B,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,GAAG,EAAE;oBACZ,QAAQ,CAAC,GAAG,CAAC,CAAC;oBACd,KAAK,CAAC,OAAO,EAAE,CAAC;gBAClB,CAAC;aACF,EACC,GAAG,EACH,EAAE,CAAC,WAAW,EAAE,GAAG,CAAC,IAAI,IAAI,SAAS,CAAC,CACvC,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;SACD,KAAK,CAAC,GAAG,CAAC,EAAE;QACX,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,OAAO,CAAC,MAAM,EAAE,CAAC;QACjB,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEL,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import '@ionic/core';\nimport { el } from \"@webtaku/el\";\nimport type { NftItem } from \"../types/nft\"; // ðŸ”· Define your NFT type\n\nexport function createNftSelectorModal(\n  address: string,\n  onSelect: (nft: NftItem) => void,\n  fetchNfts: (address: string) => Promise<NftItem[]>\n) {\n  const modal = el(\"ion-modal\");\n  const loading = el(\"ion-spinner\", { name: \"crescent\" });\n  const list = el(\"ion-list\");\n  const errorText = el(\"ion-text\", { color: \"danger\", style: \"display: none;\" }, \"Failed to load NFTs\");\n\n  const content = el(\"ion-content.ion-padding\",\n    loading,\n    errorText,\n    list\n  );\n\n  const modalHeader = el(\"ion-header\",\n    el(\"ion-toolbar\",\n      el(\"ion-title\", \"Select NFT\"),\n      el(\"ion-buttons\", { slot: \"end\" },\n        el(\"ion-button\", { onclick: () => modal.dismiss() }, \"Close\")\n      ),\n    )\n  );\n\n  modal.append(modalHeader, content);\n\n  fetchNfts(address)\n    .then(nfts => {\n      loading.remove();\n      if (!nfts.length) {\n        list.append(el(\"ion-item\", \"No NFTs to display.\"));\n        return;\n      }\n\n      nfts.forEach(nft => {\n        const img = el(\"img\", {\n          src: nft.image,\n          alt: nft.name,\n          style: \"width: 40px; height: 40px; object-fit: cover; border-radius: 4px; margin-right: 12px;\"\n        });\n\n        const item = el(\"ion-item\", {\n          button: true,\n          onclick: () => {\n            onSelect(nft);\n            modal.dismiss();\n          }\n        },\n          img,\n          el(\"ion-label\", nft.name || \"Unnamed\")\n        );\n\n        list.append(item);\n      });\n    })\n    .catch(err => {\n      console.error(err);\n      loading.remove();\n      errorText.style.display = \"\";\n    });\n\n  return modal;\n}\n"]}