{"version":3,"file":"jazzicon.js","sourceRoot":"","sources":["../../src/components/jazzicon.ts"],"names":[],"mappings":"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","sourcesContent":["import { el } from '@webtaku/el';\nimport Color from 'color';\nimport MersenneTwister from 'mersenne-twister';\nimport '../../src/components/jazzicon.css';\n\nconst DEFAULT_SHAPE_COUNT = 3;\nconst DEFAULT_WOBBLE = 30;\nconst DEFAULT_BASE_COLORS = [\n  '#01888C', // teal\n  '#FC7500', // bright orange\n  '#034F5D', // dark teal\n  '#F73F01', // orangered\n  '#FC1960', // magenta\n  '#C7144C', // raspberry\n  '#F3C100', // goldenrod\n  '#1598F2', // lightning blue\n  '#2465E1', // sail blue\n  '#F19E02', // gold\n];\n\nfunction generateJazziconSVG(\n  address: string,\n  shapeCount = DEFAULT_SHAPE_COUNT,\n  wobble = DEFAULT_WOBBLE,\n  baseColors = DEFAULT_BASE_COLORS,\n): string {\n  if (!/^0x[0-9a-fA-F]{40}$/.test(address)) throw new Error('Invalid address');\n  if (shapeCount + 1 > baseColors.length) {\n    throw new Error('Insufficient base colors');\n  }\n\n  const seed = parseInt(address.slice(2, 10), 16);\n  const generator = new MersenneTwister(seed);\n\n  const position = generator.random();\n  const hueShift = 30 * position - wobble / 2;\n  const colors = baseColors.map((hex) => Color(hex).rotate(hueShift).hex());\n\n  function nextColor(): string {\n    const position = generator.random();\n    const index = Math.floor(colors.length * position);\n    const [color] = colors.splice(index, 1);\n    return color || '#FFFFFF';\n  }\n\n  function nextTransform(index: number): string {\n    const firstRotation = generator.random();\n    const boost = generator.random();\n    const secondRotation = generator.random();\n    const angle = 2 * Math.PI * firstRotation;\n    const velocity = 100 * (index + boost) / shapeCount;\n    const x = Math.cos(angle) * velocity;\n    const y = Math.sin(angle) * velocity;\n    const r = firstRotation * 360 + secondRotation * 180;\n    return 'translate(' + x.toFixed(3) + ' ' + y.toFixed(3) + ') rotate(' +\n      r.toFixed(1) + ' 50 50)';\n  }\n\n  const shapes = [];\n  shapes.push(\n    '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"' + nextColor() +\n    '\" />',\n  );\n  for (let i = 0; i < shapeCount; i++) {\n    shapes.push(\n      '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" transform=\"' +\n      nextTransform(i) + '\" fill=\"' + nextColor() + '\" />',\n    );\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0\" y=\"0\" viewBox=\"0 0 100 100\">' +\n    shapes.join('') + '</svg>';\n}\n\nfunction createJazziconDataURL(\n  address: string,\n  shapeCount = DEFAULT_SHAPE_COUNT,\n  wobble = DEFAULT_WOBBLE,\n  baseColors = DEFAULT_BASE_COLORS,\n): string {\n  return 'data:image/svg+xml;utf8,' +\n    encodeURIComponent(\n      generateJazziconSVG(address, shapeCount, wobble, baseColors),\n    );\n}\n\nfunction createJazzicon(address: string) {\n  const img = el('img.jazzicon');\n  img.src = createJazziconDataURL(address);\n  return img;\n}\n\nexport { createJazzicon, createJazziconDataURL };\n"]}