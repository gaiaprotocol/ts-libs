{"version":3,"file":"editor.js","sourceRoot":"","sources":["../src/editor.ts"],"names":[],"mappings":"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","sourcesContent":["import '@ionic/core';\nimport { defineCustomElements } from '@ionic/core/loader';\nimport '@shoelace-style/shoelace';\nimport { el } from '@webtaku/el';\nimport { EventEmitter } from '@webtaku/event-emitter';\nimport { DomAnimatedSpriteNode, DomGameObject, domPreload, Frame } from 'kiwiengine';\nimport '../src/editor.css';\nimport { KeyToFrame } from './types/frame';\nimport { NftData, PartCategory, PartOptions } from './types/nft';\nimport { buildDefaultParts, cleanData, cloneData, getPartCategoriesAndFrames, partItemAvailable } from './utils/derive';\n\ndefineCustomElements(window);\n\ntype NftAttributeEditorOptions = {\n  traitOptions?: { [traitName: string]: string[] };\n  partOptions: PartOptions;\n  baseData: NftData;\n  keyToFrame: KeyToFrame;\n  frames: Record<string, Frame>;\n  spritesheetImagePath: string;\n};\n\nclass EditorComponent extends EventEmitter<{\n  dataChanged: (data: NftData) => void,\n}> {\n  constructor(\n    public el: HTMLElement,\n    public data: NftData,\n    public remove: () => void,\n  ) {\n    super();\n  }\n}\n\n/** 합성 프리뷰 생성 (큰/작은 공용) */\nfunction createPreview(\n  categories: PartCategory[],\n  keyToFrame: KeyToFrame,\n  data: NftData,\n  frames: Record<string, Frame>,\n  spritesheetImagePath: string,\n) {\n  const preview = new DomGameObject();\n\n  for (const [partName, partValue] of Object.entries(data.parts)) {\n    const category = categories.find((cat) => cat.name === partName);\n    if (!category) continue;\n\n    const part = category.parts.find((p) => p.name === partValue);\n    if (!part?.images || part.images.length === 0) continue;\n\n    // drawOrder 기준 정렬(있다면)\n    const images = [...part.images].sort((a, b) => (a.drawOrder ?? 0) - (b.drawOrder ?? 0));\n\n    for (const image of images) {\n      const frame = keyToFrame[image.path];\n      if (!frame) continue;\n\n      const sprite = new DomAnimatedSpriteNode({\n        src: spritesheetImagePath,\n        atlas: {\n          frames,\n          animations: {\n            [frame as string]: {\n              frames: [frame as string],\n              fps: 1,\n              loop: false,\n            }\n          }\n        },\n        animation: frame as string,\n        drawOrder: image.drawOrder,\n      });\n\n      preview.add(sprite);\n    }\n  }\n\n  return preview;\n}\n\n/** 에디터 생성 (좌측: 선택기, 우측: 고정 프리뷰) */\nexport async function createNftAttributeEditor(options: NftAttributeEditorOptions) {\n  const {\n    traitOptions,\n    partOptions,\n    baseData,\n    keyToFrame,\n    frames,\n    spritesheetImagePath\n  } = options;\n\n  await domPreload([spritesheetImagePath]);\n\n  // 루트\n  const editor = el('ion-content.nft-attribute-editor');\n\n  // ---- 상태\n  let data = baseData;\n\n  // ---- 레이아웃 (좌/우)\n  const layout = el('div', { class: 'nft-editor-layout' });\n  const selectorsCol = el('div', { class: 'nft-selectors' });\n  const previewCol = el('div', { class: 'nft-preview-col' });\n\n  layout.append(selectorsCol, previewCol);\n  editor.append(layout);\n\n  // ---- 선택기(칩) 생성\n  function createAttributeSelector<T extends string | number>(\n    label: string,\n    values: readonly T[],\n    selected: T,\n    onSelect: (value: T) => void\n  ): HTMLElement {\n    const card = el('ion-card.attribute-selector');\n    const header = el('ion-card-header', el('ion-card-title', label));\n    const content = el('ion-card-content');\n\n    const { categories: currentCategories } = getPartCategoriesAndFrames(\n      partOptions, keyToFrame, data.traits\n    );\n    const isPartLabel = currentCategories.some(c => c.name === label);\n\n    for (const value of values) {\n      // 이 값이 적용된 \"가상 데이터\" 준비\n      const makePreviewData = () => {\n        let previewData = cloneData(data);\n        if (isPartLabel) {\n          previewData.parts[label] = value as any;\n          previewData = cleanData(previewData, partOptions, keyToFrame);\n        } else {\n          previewData.traits = { ...(previewData.traits ?? {}), [label]: value as any };\n          const { categories: previewCats } = getPartCategoriesAndFrames(\n            partOptions, keyToFrame, previewData.traits\n          );\n          previewData.parts = buildDefaultParts(previewCats);\n          previewData = cleanData(previewData, partOptions, keyToFrame);\n        }\n        return previewData;\n      };\n\n      // 128×128 썸네일 컨테이너\n      const thumbContainer = el('div.nft-thumb-128');\n\n      try {\n        const pd = makePreviewData();\n        const { categories: previewCategories, keyToFrameFlat } = getPartCategoriesAndFrames(\n          partOptions, keyToFrame, pd.traits\n        );\n        const thumbPreview = createPreview(\n          previewCategories, keyToFrameFlat, pd, frames, spritesheetImagePath\n        );\n        thumbPreview.attachTo(thumbContainer);\n      } catch { /* 썸네일 실패는 무시 */ }\n\n      // chip 생성부 (핵심만 발췌)\n      const isSelected = value === selected;\n\n      // 체크 배지 (레이아웃에서 제외)\n      const checkBadge =\n        el('sl-icon', { name: 'check', class: 'check-badge', 'aria-hidden': 'true' });\n\n      if (isSelected) thumbContainer.append(checkBadge);\n\n      const chip = el(\n        `ion-chip.attribute-item.tile${isSelected ? '.selected' : ''}`,\n        { outline: true, color: isSelected ? 'primary' : 'medium' },\n        thumbContainer,\n        el('ion-label', String(value))  // ← 아이콘은 더 이상 여기 두지 않습니다\n      );\n\n      // 클릭 시 선택 토글 반영\n      chip.addEventListener('click', () => {\n        onSelect(value);\n      });\n\n      content.append(chip);\n    }\n\n    card.append(header, content);\n    return card;\n  }\n\n  // ---- 렌더(좌측만 갱신)\n  function render() {\n    selectorsCol.innerHTML = '';\n\n    // Traits\n    if (traitOptions && Object.keys(traitOptions).length > 0) {\n      for (const [traitName, values] of Object.entries(traitOptions)) {\n        const selected = (data.traits ?? {})[traitName] as string | number | undefined;\n        const selector = createAttributeSelector<string | number>(\n          traitName,\n          values,\n          selected ?? values[0],\n          (val) => {\n            const next = cloneData(data);\n            next.traits = { ...(next.traits ?? {}), [traitName]: val };\n\n            const { categories } = getPartCategoriesAndFrames(\n              partOptions, keyToFrame, next.traits\n            );\n            // 트레잇 변경 시 파츠 디폴트 재설정\n            next.parts = buildDefaultParts(categories);\n            data = cleanData(next, partOptions, keyToFrame);\n\n            render();\n            component.emit('dataChanged', data);\n          }\n        );\n        selectorsCol.append(selector);\n      }\n    }\n\n    // Parts\n    const { categories } = getPartCategoriesAndFrames(partOptions, keyToFrame, data.traits);\n\n    for (const cat of categories) {\n      const available = cat.parts.filter(p => partItemAvailable(p, data));\n      if (available.length === 0) continue;\n\n      // 선택값 보정\n      const selectedName = data.parts[cat.name] as string | number | undefined;\n      const selectedExists = selectedName != null && available.some(p => p.name === selectedName);\n      if (!selectedExists) {\n        const next = cloneData(data);\n        next.parts[cat.name] = available[0].name;\n        data = cleanData(next, partOptions, keyToFrame);\n      }\n\n      const selector = createAttributeSelector<string | number>(\n        cat.name,\n        available.map(p => p.name),\n        data.parts[cat.name] as string | number,\n        (val) => {\n          const next = cloneData(data);\n          next.parts[cat.name] = val;\n          data = cleanData(next, partOptions, keyToFrame);\n          render();\n          component.emit('dataChanged', data);\n        }\n      );\n      selectorsCol.append(selector);\n    }\n  }\n\n  // 초기 페인트\n  render();\n\n  const component = new EditorComponent(editor, data, () => editor.remove());\n  return component;\n}\n"]}