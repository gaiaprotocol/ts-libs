{"version":3,"file":"name-search-result.js","sourceRoot":"","sources":["../../src/components/name-search-result.ts"],"names":[],"mappings":"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","sourcesContent":["import '@shoelace-style/shoelace';\nimport { el } from '@webtaku/el';\nimport '../../src/components/name-search-result.css';\n\ndeclare const GAIA_API_BASE_URI: string;\n\nconst BLACKLIST_NAMES = ['gaia', 'gaiaprotocol', 'admin', 'null', 'root'];\n\nfunction rowButton(opts: {\n  title: string;\n  meta?: HTMLElement;\n  suffixIcon?: string;\n  onClick: () => void;\n  ariaLabel?: string;\n}): HTMLElement {\n  const btn = el('button.list-row', {\n    type: 'button',\n    'ariaLabel': opts.ariaLabel ?? opts.title,\n    onclick: opts.onClick,\n    onkeydown: (e: KeyboardEvent) => {\n      if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); (e.currentTarget as HTMLButtonElement).click(); }\n    }\n  },\n    el('div',\n      el('div.title', opts.title),\n      opts.meta ? el('p.meta', opts.meta) : null,\n    ),\n    opts.suffixIcon\n      ? el('sl-icon', { name: opts.suffixIcon, slot: 'suffix', 'ariaHidden': 'true' })\n      : null\n  );\n  return btn;\n}\n\nasync function createNameSearchResultContent(query: string): Promise<HTMLElement> {\n  const container = el('div.name-search-result-content');\n\n  if (query.trim().length < 2) {\n    container.append(el('sl-alert', { variant: 'neutral', open: true }, 'Please enter at least 2 characters.'));\n    return container;\n  }\n\n  const spinner = el('sl-spinner', { style: 'margin: 1rem auto; display: block;' });\n  container.append(spinner);\n\n  let availableName: string | undefined;\n\n  try {\n    const res = await fetch(`${GAIA_API_BASE_URI}/search-names`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query }),\n    });\n\n    if (!res.ok) throw new Error('Search API failed');\n\n    const result: { name: string }[] = await res.json();\n    const names = result\n      .map((r) => r.name)\n      .filter((n) => !BLACKLIST_NAMES.includes(n.toLowerCase()));\n\n    const exactMatch = names.some((n) => n.toLowerCase() === query.toLowerCase());\n\n    // 리스트\n    const list = el('div.result-list');\n\n    for (const name of names) {\n      const title = `${name}.gaia`;\n      const meta = el('span',\n        'Registered ',\n        el('sl-badge', { pill: true, variant: 'neutral', class: 'badge' }, 'taken')\n      );\n\n      list.append(\n        rowButton({\n          title,\n          meta,\n          suffixIcon: 'arrow-right',\n          onClick: () => (location.href = `/${name}.gaia`),\n          ariaLabel: `${title} (registered)`,\n        })\n      );\n    }\n\n    container.append(list);\n\n    // 사용 가능\n    if (!exactMatch && !BLACKLIST_NAMES.includes(query)) {\n      // 구분선\n      container.append(el('div.result-separator'));\n\n      availableName = `${query}.gaia`;\n\n      const available = el('div.available-name',\n        el('h4', 'Available'),\n        rowButton({\n          title: availableName,\n          suffixIcon: 'arrow-right',\n          onClick: () => (location.href = `/${availableName}`),\n          ariaLabel: `${availableName} (available)`,\n        })\n      );\n\n      container.append(available);\n    }\n\n    if (names.length === 0 && !availableName) {\n      container.append(el('sl-alert', { variant: 'neutral', open: true }, 'No matching names found.'));\n    }\n  } catch (e) {\n    container.append(el('sl-alert', { variant: 'danger', open: true }, 'Failed to fetch search results.'));\n  } finally {\n    spinner.remove();\n  }\n\n  return container;\n}\n\nexport { createNameSearchResultContent };\n"]}