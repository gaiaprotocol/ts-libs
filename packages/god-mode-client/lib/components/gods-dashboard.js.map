{"version":3,"file":"gods-dashboard.js","sourceRoot":"","sources":["../../src/components/gods-dashboard.ts"],"names":[],"mappings":"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","sourcesContent":["import '@shoelace-style/shoelace';\nimport { el } from '@webtaku/el';\nimport { createChart, IChartApi, ISeriesApi, LineData, LineSeries, Time } from 'lightweight-charts';\nimport '../../src/components/gods-dashboard.css';\n\ndeclare const GAIA_API_BASE_URI: string;\n\ntype Metric = 'numOwners' | 'floorPrice';\n\ninterface GodsStatsPoint {\n  time: string;\n  floor_price: number;\n  num_owners: number;\n}\ninterface GodsStatsResponse {\n  stats: GodsStatsPoint[];\n  current: { floor_price: number; num_owners: number };\n}\n\nexport function createGodsStatsDashboard(): HTMLElement {\n  // Header inside card body\n  const header = el('div.gs-header');\n\n  // Stats (left column)\n  const statsCard = el('div.gs-panel',\n    el('div.gs-section-title', el('sl-icon', { name: 'graph-up-arrow' }), 'Global Stats'),\n    el('div.gs-stats',\n      el('div.gs-stat',\n        el('div.value', { 'data-field': 'holders' }, '—'),\n        el('div.label', 'Total Unique Holders'),\n      ),\n      el('div.gs-stat',\n        el('div.value', { 'data-field': 'floor' }, '—'),\n        el('div.label', 'Floor Price (ETH)'),\n      ),\n    ),\n  );\n\n  // Trend (left column, below stats)\n  const chartCard = el('div.gs-panel',\n    el('div.gs-section-title', el('sl-icon', { name: 'activity' }), 'Trend'),\n    el('sl-tab-group', { activation: 'manual', style: 'margin-bottom:8px;' },\n      el('sl-tab', { slot: 'nav', panel: 'holders', active: true }, 'Holders'),\n      el('sl-tab', { slot: 'nav', panel: 'floor' }, 'Floor Price'),\n      el('sl-tab-panel', { name: 'holders', active: true }),\n      el('sl-tab-panel', { name: 'floor' }),\n    ),\n    el('div.gs-chart-wrap'),\n    el('div.gs-sub', 'Plots the \"stats\" array as a time series.'),\n  );\n\n  // About (right column)\n  const aboutCard = el('div.gs-panel',\n    el('div.gs-section-title', el('sl-icon', { name: 'info' }), 'About The Gods'),\n    el('div', { class: 'gs-about' },\n      'Explore the trend of unique holders and the floor price for The Gods NFT collection.'\n    ),\n  );\n\n  const grid = el('div.gs-grid',\n    //aboutCard\n    statsCard,\n    chartCard,\n  );\n\n  const root = el('section.gods-stats-dash', header, grid);\n\n  // ---------- Chart ----------\n  const chartWrap = chartCard.querySelector('.gs-chart-wrap') as HTMLElement;\n  const tabGroup = chartCard.querySelector('sl-tab-group') as HTMLElement;\n\n  let chart: IChartApi | null = null;\n  let series: ISeriesApi<'Line'> | null = null;\n  let currentMetric: Metric = 'numOwners';\n  let lastRows: GodsStatsPoint[] = [];\n\n  function isDark() {\n    const de = document.documentElement;\n    return de.classList.contains('sl-theme-dark')\n      || de.classList.contains('dark')\n      || window.matchMedia?.('(prefers-color-scheme: dark)').matches;\n  }\n\n  function ensureChart() {\n    if (chart) return;\n    chart = createChart(chartWrap, {\n      autoSize: true,\n      height: 360,\n      layout: {\n        background: { color: isDark() ? 'rgba(20,23,29,1)' : 'rgba(250,250,250,1)' },\n        textColor: isDark() ? 'rgba(230,230,230,0.65)' : 'rgba(60,60,60,0.75)',\n      },\n      grid: {\n        vertLines: { color: isDark() ? 'rgba(230,230,230,0.08)' : 'rgba(0,0,0,0.06)' },\n        horzLines: { color: isDark() ? 'rgba(230,230,230,0.08)' : 'rgba(0,0,0,0.06)' },\n      },\n      timeScale: { timeVisible: true, secondsVisible: false },\n    });\n    series = chart.addSeries(LineSeries, { color: '#7C3AED' });\n  }\n\n  function setChart(metric: Metric, rows: GodsStatsPoint[]) {\n    ensureChart();\n    currentMetric = metric;\n    const data: LineData<Time>[] = rows.map((r) => ({\n      time: Math.floor(new Date(r.time).getTime() / 1000) as Time,\n      value: metric === 'numOwners' ? r.num_owners : r.floor_price,\n    }));\n    series!.setData(data);\n    chart!.timeScale().fitContent();\n  }\n\n  // ---------- Data ----------\n  async function fetchGodsStats(): Promise<GodsStatsResponse> {\n    const res = await fetch(`${GAIA_API_BASE_URI}/gods-stats`, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    });\n    if (!res.ok) throw new Error('Failed to fetch /gods-stats');\n    return res.json();\n  }\n\n  (async () => {\n    try {\n      const { stats, current } = await fetchGodsStats();\n\n      // Current stats\n      const holdersNode = statsCard.querySelector('[data-field=\"holders\"]')!;\n      const floorNode = statsCard.querySelector('[data-field=\"floor\"]')!;\n      holdersNode.textContent = current?.num_owners != null ? String(current.num_owners) : '—';\n      floorNode.textContent = current?.floor_price != null ? String(current.floor_price) : '—';\n\n      // Chart\n      lastRows = stats ?? [];\n      setChart('numOwners', lastRows);\n\n      tabGroup.addEventListener('sl-tab-show', (e: any) => {\n        const name = e.detail.name as 'holders' | 'floor';\n        if (name === 'holders' && currentMetric !== 'numOwners') setChart('numOwners', lastRows);\n        if (name === 'floor' && currentMetric !== 'floorPrice') setChart('floorPrice', lastRows);\n      });\n    } catch (err) {\n      root.append(el('sl-alert', { variant: 'danger', open: true }, 'Failed to load The Gods stats.'));\n    }\n  })();\n\n  return root;\n}\n"]}