{"version":3,"file":"validate-token.js","sourceRoot":"","sources":["../../src/handlers/validate-token.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAE9C,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,OAAgB,EAAE,GAA2B;IACrF,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAClD,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;QACjC,OAAO,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE5B,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,OAAO,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IAC3C,CAAC;IAED,OAAO,YAAY,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;AACzC,CAAC","sourcesContent":["import { jsonWithCors } from '../services/cors';\nimport { verifyToken } from '../services/jwt';\n\nexport async function handleValidateToken(request: Request, env: { JWT_SECRET: string }) {\n  const auth = request.headers.get('authorization');\n  if (!auth?.startsWith('Bearer ')) {\n    return jsonWithCors('Unauthorized', 401);\n  }\n\n  const token = auth.slice(7);\n\n  const payload = await verifyToken(token, env);\n  if (!payload) {\n    return jsonWithCors('Unauthorized', 401);\n  }\n\n  return jsonWithCors({ user: payload });\n}\n"]}