{"version":3,"file":"siwe.js","sourceRoot":"","sources":["../../src/services/siwe.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,MAAM,MAAM,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,MAAM,WAAW,CAAC;AAS9C,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,OAAsB,EAAE,SAAwB,EAAE,OAAe,EAAE,GAAQ;IAC5G,MAAM,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC;IAC1C,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;IAEpC,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,OAAO,EAAE,CAAC,CAAC;IAC7D,IAAI,CAAC,MAAM;QAAE,OAAO,KAAK,CAAC;IAE1B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAE/C,MAAM,WAAW,GAAG,iBAAiB,CAAC;QACpC,MAAM,EAAE,cAAc;QACtB,OAAO;QACP,SAAS,EAAE,GAAG,CAAC,wBAAwB;QACvC,GAAG,EAAE,WAAW;QAChB,OAAO,EAAE,GAAG;QACZ,OAAO;QACP,KAAK;QACL,QAAQ,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC;KAC7B,CAAC,CAAC;IAEH,MAAM,UAAU,GAAG,MAAM,aAAa,CAAC;QACrC,OAAO;QACP,OAAO,EAAE,WAAW;QACpB,SAAS;KACV,CAAC,CAAC;IAEH,IAAI,CAAC,UAAU;QAAE,OAAO,KAAK,CAAC;IAE9B,qCAAqC;IACrC,MAAM,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,OAAO,EAAE,CAAC,CAAC;IAEjD,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import { KVNamespace } from \"@cloudflare/workers-types\";\nimport { verifyMessage } from \"viem\";\nimport { createSiweMessage } from \"viem/siwe\";\n\ntype Env = {\n  ALLOWED_DOMAIN: string;\n  ALLOWED_URI: string;\n  MESSAGE_FOR_WALLET_LOGIN: string;\n  SIWE_NONCES: KVNamespace;\n};\n\nexport async function validateSiwe(address: `0x${string}`, signature: `0x${string}`, chainId: number, env: Env) {\n  const expectedDomain = env.ALLOWED_DOMAIN;\n  const expectedUri = env.ALLOWED_URI;\n\n  const stored = await env.SIWE_NONCES.get(`nonce:${address}`);\n  if (!stored) return false;\n\n  const { nonce, issuedAt } = JSON.parse(stored);\n\n  const siweMessage = createSiweMessage({\n    domain: expectedDomain,\n    address,\n    statement: env.MESSAGE_FOR_WALLET_LOGIN,\n    uri: expectedUri,\n    version: '1',\n    chainId,\n    nonce,\n    issuedAt: new Date(issuedAt),\n  });\n\n  const isValidSig = await verifyMessage({\n    address,\n    message: siweMessage,\n    signature,\n  });\n\n  if (!isValidSig) return false;\n\n  // delete nonce here to prevent reuse\n  await env.SIWE_NONCES.delete(`nonce:${address}`);\n\n  return true;\n}\n"]}